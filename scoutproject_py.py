# -*- coding: utf-8 -*-
"""scoutproject.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17-yS1ihRSYXBOa98oGtbgBYEFJA06pou
"""

import streamlit as st
import pandas as pd
import os
import streamlit_authenticator as stauth

# ======================
# ARQUIVOS
# ======================
USERS_FILE = "usuarios.csv"
DB_FILE = "projetos.csv"
IMG_DIR = "fotos"

# Garante a pasta de fotos
os.makedirs(IMG_DIR, exist_ok=True)

# Cria arquivo de usu치rios se n칚o existir
if not os.path.exists(USERS_FILE):
    df_users = pd.DataFrame(columns=["username", "nome", "senha_hash"])
    df_users.to_csv(USERS_FILE, index=False)

# Cria arquivo de projetos se n칚o existir
if not os.path.exists(DB_FILE):
    df_proj = pd.DataFrame(columns=["Nome", "Autor", "Categoria", "Descri칞칚o", "Foto"])
    df_proj.to_csv(DB_FILE, index=False)

# ======================
# FUN칂칏ES DE USU츼RIO
# ======================
def cadastrar_usuario(username, nome, senha):
    df_users = pd.read_csv(USERS_FILE)
    if username in df_users["username"].values:
        return False, "Esse usu치rio j치 existe!"

    senha_hash = stauth.Hasher([senha]).generate()[0]
    novo = pd.DataFrame([[username, nome, senha_hash]], columns=["username", "nome", "senha_hash"])
    df_users = pd.concat([df_users, novo], ignore_index=True)
    df_users.to_csv(USERS_FILE, index=False)
    return True, "Usu치rio cadastrado com sucesso!"

def autenticar_usuario(username, senha):
    df_users = pd.read_csv(USERS_FILE)
    if username not in df_users["username"].values:
        return False, None

    senha_hash = df_users.loc[df_users["username"] == username, "senha_hash"].values[0]
    if stauth.Hasher([senha]).check([senha], [senha_hash])[0]:
        nome = df_users.loc[df_users["username"] == username, "nome"].values[0]
        return True, nome
    else:
        return False, None

# ======================
# INTERFACE
# ======================
st.set_page_config(page_title="Banco de Projetos Escoteiros", layout="wide")
st.title("游닄 Banco de Projetos Escoteiros")

menu = st.sidebar.radio("Menu", ["Login", "Registrar", "Consultar Projetos"])

# LOGIN
if menu == "Login":
    st.subheader("Login")
    username = st.text_input("Usu치rio")
    senha = st.text_input("Senha", type="password")

    if st.button("Entrar"):
        ok, nome = autenticar_usuario(username, senha)
        if ok:
            st.success(f"Bem-vindo, {nome}!")

            # Menu interno
            escolha = st.radio("O que deseja fazer?", ["Cadastrar Projeto", "Consultar Projetos"])

            if escolha == "Cadastrar Projeto":
                st.header("Cadastrar novo projeto escoteiro")

                nome_proj = st.text_input("Nome do projeto")
                categoria = st.selectbox("Categoria", ["Meio Ambiente", "Comunidade", "Cultura", "Educa칞칚o", "Outro"])
                descricao = st.text_area("Descri칞칚o do projeto")
                foto = st.file_uploader("Adicionar foto do projeto", type=["jpg", "jpeg", "png"])

                if st.button("Salvar projeto"):
                    foto_path = ""
                    if foto is not None:
                        foto_path = os.path.join(IMG_DIR, f"{nome_proj}_{foto.name}")
                        with open(foto_path, "wb") as f:
                            f.write(foto.getbuffer())

                    novo = pd.DataFrame([[nome_proj, nome, categoria, descricao, foto_path]],
                                        columns=["Nome", "Autor", "Categoria", "Descri칞칚o", "Foto"])
                    df = pd.read_csv(DB_FILE)
                    df = pd.concat([df, novo], ignore_index=True)
                    df.to_csv(DB_FILE, index=False)
                    st.success("Projeto salvo com sucesso!")

            elif escolha == "Consultar Projetos":
                st.header("Banco de Projetos Escoteiros")
                df = pd.read_csv(DB_FILE)

                filtro_categoria = st.selectbox("Filtrar por categoria", ["Todas"] + df["Categoria"].unique().tolist())
                if filtro_categoria != "Todas":
                    df = df[df["Categoria"] == filtro_categoria]

                if len(df) == 0:
                    st.info("Nenhum projeto encontrado.")
                else:
                    cols = st.columns(3)
                    for i, (_, row) in enumerate(df.iterrows()):
                        col = cols[i % 3]
                        with col:
                            st.markdown(f"### {row['Nome']}")
                            st.write(f"游녻 {row['Autor']}")
                            if row["Foto"] and os.path.exists(row["Foto"]):
                                st.image(row["Foto"], use_container_width=True)
                            st.caption(f"游늭 {row['Categoria']}")
                            with st.expander("Descri칞칚o"):
                                st.write(row["Descri칞칚o"])
                            st.markdown("---")

        else:
            st.error("Usu치rio ou senha incorretos")

# REGISTRO
elif menu == "Registrar":
    st.subheader("Registrar novo usu치rio")
    new_username = st.text_input("Usu치rio")
    new_nome = st.text_input("Nome completo")
    new_senha = st.text_input("Senha", type="password")

    if st.button("Cadastrar"):
        ok, msg = cadastrar_usuario(new_username, new_nome, new_senha)
        if ok:
            st.success(msg)
        else:
            st.error(msg)

# CONSULTAR SEM LOGIN (somente leitura)
elif menu == "Consultar Projetos":
    st.header("Banco de Projetos Escoteiros")
    df = pd.read_csv(DB_FILE)
    if len(df) == 0:
        st.info("Nenhum projeto cadastrado ainda.")
    else:
        filtro_categoria = st.selectbox("Filtrar por categoria", ["Todas"] + df["Categoria"].unique().tolist())
        if filtro_categoria != "Todas":
            df = df[df["Categoria"] == filtro_categoria]

        cols = st.columns(3)
        for i, (_, row) in enumerate(df.iterrows()):
            col = cols[i % 3]
            with col:
                st.markdown(f"### {row['Nome']}")
                st.write(f"游녻 {row['Autor']}")
                if row["Foto"] and os.path.exists(row["Foto"]):
                    st.image(row["Foto"], use_container_width=True)
                st.caption(f"游늭 {row['Categoria']}")
                with st.expander("Descri칞칚o"):
                    st.write(row["Descri칞칚o"])
                st.markdown("---")